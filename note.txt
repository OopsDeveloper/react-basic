*React
데이터를 State (내부상태), Props (외부로 부터 전달받은 상태) 나타내는 render가 있다.
상태가 변경될때마다 re-render 된다.
실제로 변경된 부분만 화면에 업데이트 된다.

*React Hooks
- 재사용 가능한 함수들
- use로 시작하는 함수들은 React Hooks (useState - 상태관리, useEffect - 컴포넌트 생애주기 관리 로직, useUser - 서버에서 받아온 사용자, useRef, useMemo, usecollback, usecontext...)
- 내가 원하는 것들을 재사용 가능함
- Hooks은 (함수들은) 값의 재사용이 아니라 로직의 재사용을 위한것이다.

*설치 확인
node -v, npm -v, yarn -v
corepack enable

yarn create react-app basic

안되면 npx create react-app basic


 => npm create vite@latest basic --template react


*snippets 만드는법
1.shift+contl+P를 누른다.
2.Configure User Snippets 를 클릭한다.
3.New global snippets file를 클릭한다.
4.이름 만들고 코드 삽입
{
  "reactFunction": {
    "prefix": "rfc",
    "body": "import React from 'react';\n\nexport default function ${1:${TM_FILENAME_BASE}}() {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\n",
    "description": "Creates a React Function component"
  },
  "reactStatelessImplicitReturn": {
    "prefix": "rsi",
    "body": "import React from 'react';\n\nexport const ${1:${TM_FILENAME_BASE}} = (props) => (\n\t\t\t$0\n\t);",
    "description": "Creates a React Function component"
  },
  "Import Module CSS": {
    "prefix": "si",
    "body": ["import styles from './$TM_FILENAME_BASE.module.css'"],
    "description": "Import PostCSS"
  },
  "ClassName": {
    "prefix": "cn",
    "body": ["className={styles.$1}"],
    "description": "Adding className"
  }
}